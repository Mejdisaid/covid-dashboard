{"version":3,"sources":["Composants/Cards/Cards.module.css","Composants/Chart/Chart.jsx","Composants/Departement/Departement.jsx","Composants/Cards/Cards.jsx","Composants/ModelInput/ModelInput.jsx","Composants/ModelChart/ModelChart.jsx","api/index.js","App.js","index.js","Composants/Chart/Chart.module.css","Composants/Departement/Departement.module.css","Composants/ModelInput/ModelInput.module.css","Composants/ModelChart/ModelChart.module.css","App.module.css"],"names":["module","exports","Chart","data","GlobalData","PaysData","country","diff","text1","text2","text3","dateData","totalinfectionData","infectionData","recoveredData","deathsData","totalinfectionDataDiff","infectionDataDiff","recoveredDataDiff","deathsDataDiff","i","length","Infection","TauxInfection","Guerisons","Date","Deces","j","Pays","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","className","styles","container","labels","datasets","label","borderColor","fill","Departement","handleCountryChange","handleTypeChange","FormControl","NativeSelect","defaultValue","onChange","e","target","value","Cards","valueFound","console","log","infection","active","recovered","deaths","date","toDateString","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","ModelInput","Choice","handleInputChange","N","s0","e0","i0","r0","a","b","c","f","conf","duree","Population","S0","I0","E0","R0","A","B","C","F","Conf","Duree","onSubmit","description","type","placeholder","getTime","onClick","ModelChart","choice","susceptibles","exposed","parameters","text4","parseFloat","realRecoveries","remplissage","solution","NaN","EQM","array1","array2","result","Math","pow","direction","e1","e2","e3","e4","e5","e6","e7","e8","pas","minimum","aux","fetchData","axios","get","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ce5efac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1R1lV\",\"card\":\"Cards_card__2jypn\",\"infected\":\"Cards_infected__LBdpZ\",\"active\":\"Cards_active__3gjwl\",\"recovered\":\"Cards_recovered__1_2Y6\",\"deaths\":\"Cards_deaths__k7QHA\"};","import React from 'react' ; \r\nimport { Line } from 'react-chartjs-2' ;\r\nimport styles from './Chart.module.css' ;\r\n//import * as zoom from 'chartjs-plugin-zoom' ; \r\n\r\n\r\n\r\n\r\nconst Chart  = ( {data:{GlobalData , PaysData} , country, diff}) =>   {\r\n    \r\n    var text0 = 'total infected' ;\r\n    var text1 = 'active cases'; \r\n    var text2 = 'recoveries' ; \r\n    var text3 = 'deaths' ;\r\n    \r\n    var dateData  =[]  ;\r\n    var totalinfectionData =[] ;\r\n    var infectionData = [] ;  \r\n    var recoveredData = [] ;\r\n    var deathsData = [] ; \r\n\r\n    var totalinfectionDataDiff =[] ;\r\n    var infectionDataDiff = [] ; \r\n    var recoveredDataDiff = [] ; \r\n    var deathsDataDiff = [] ; \r\n    \r\n    if (!GlobalData)\r\n        return 'Loading ...';\r\n\r\n\r\n\r\n    if (( country === '' ) || (country === 'global') ) {\r\n        for ( let i = GlobalData.length-1 ; i > 0 ; i-- ){\r\n            infectionData[GlobalData.length-1 - i ] = GlobalData[i].Infection * GlobalData[i].TauxInfection * 0.01   ; \r\n            totalinfectionData[GlobalData.length-1 - i ] = GlobalData[i].Infection ;\r\n        }\r\n        for ( let i = GlobalData.length-1 ; i > 0 ; i-- )\r\n            recoveredData[GlobalData.length -1 - i] = GlobalData[i].Guerisons ; \r\n        for ( let i = GlobalData.length -1 ; i  > 0  ; i-- )\r\n            dateData[GlobalData.length-1 - i] = GlobalData[i].Date ;         // NEED FIXING : Time format !!!!!  \r\n        for ( let i = GlobalData.length -1 ; i  > 0  ; i-- )\r\n            deathsData[GlobalData.length-1 - i] = GlobalData[i].Deces ; \r\n    }else {\r\n        var j = 0; \r\n        for ( let i = PaysData.length-1 ; i > 0 ; i-- ){\r\n            if (PaysData[i].Pays === country){\r\n                infectionData[j] = PaysData[i].Infection * PaysData[i].TauxInfection *0.01 ; \r\n                totalinfectionData[j] = PaysData[i].Infection ;\r\n                //console.log(PaysData[i].TauxInfection);\r\n                j = j+1 ; \r\n            }      \r\n        }\r\n        j=0 ; \r\n        for ( let i = PaysData.length-1 ; i > 0 ; i-- ){\r\n            if (PaysData[i].Pays === country){\r\n                dateData[j] = PaysData[i].Date ; \r\n                j = j+1 ; \r\n            }      \r\n        }\r\n        j=0 ; \r\n        for ( let i = PaysData.length-1 ; i > 0 ; i-- ){\r\n            if (PaysData[i].Pays === country){\r\n                recoveredData[j] = PaysData[i].Guerisons ; \r\n                j = j+1 ; \r\n            }      \r\n        }\r\n        j=0 ; \r\n        for ( let i = PaysData.length-1 ; i > 0 ; i-- ){\r\n            if (PaysData[i].Pays === country){ \r\n                deathsData[j] = PaysData[i].Deces ; \r\n                j = j+1 ; \r\n            }      \r\n        }\r\n    }\r\n\r\n    if (diff === 'diff'){\r\n        text1 = 'new active cases' ; \r\n        text2 = 'new recoveries' ; \r\n        text3 = 'new deaths' ;\r\n        totalinfectionDataDiff[0] = totalinfectionData[0] ;\r\n        infectionDataDiff[0] = infectionData[0] ; \r\n        recoveredDataDiff[0] = recoveredData[0] ; \r\n        deathsDataDiff[0]    = deathsData[0] ; \r\n        for ( let i =1  ; i< infectionData.length ; i++ ){\r\n            infectionDataDiff[i] = infectionData[i] - infectionData[i-1] ; \r\n        }\r\n        for ( let i =1  ; i< recoveredData.length ; i++ ){\r\n            recoveredDataDiff[i] = recoveredData[i] - recoveredData[i-1] ; \r\n        }\r\n        for ( let i =1  ; i< deathsData.length ; i++ ){\r\n            deathsDataDiff[i] = deathsData[i] - deathsData[i-1] ; \r\n        }\r\n        for ( let i =1  ; i< totalinfectionData.length ; i++ ){\r\n            totalinfectionDataDiff[i] = totalinfectionData[i] - totalinfectionData[i-1] ; \r\n        }\r\n        totalinfectionData = totalinfectionDataDiff ;\r\n        infectionData = infectionDataDiff ; \r\n        recoveredData = recoveredDataDiff ; \r\n        deathsData    = deathsDataDiff    ;\r\n    }\r\n    \r\n     //console.log(infectionData);\r\n     //console.log(recoveredData);\r\n     //console.log(dateData);\r\n\r\n\r\n     // FORMAT THE DATE FOR THE CHART \r\n     for ( let i =0 ; i < dateData.length ; i++ ){\r\n        const d = new Date(dateData[i]) ; \r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d)\r\n        const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(d)\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d)\r\n        dateData[i] = `${da}-${mo}-${ye}` ;\r\n     }\r\n\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Line\r\n                    data={\r\n                        {\r\n                            labels : dateData,\r\n                            datasets : [{\r\n                                data : totalinfectionData,\r\n                                label : text0,\r\n                                borderColor : 'gray',\r\n                                fill : 'true',\r\n                            },{\r\n                                data : infectionData,\r\n                                label : text1,\r\n                                borderColor : 'blue',\r\n                                fill : 'true',\r\n                            },{\r\n                                data : recoveredData,\r\n                                label : text2,\r\n                                borderColor : 'green',\r\n                                fill : 'true',\r\n                            },{\r\n                                data : deathsData,\r\n                                label : text3,\r\n                                borderColor : 'red',\r\n                                fill : 'true',\r\n                            }],\r\n                        }\r\n\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Chart ;","import React from 'react' ; \r\nimport {NativeSelect , FormControl } from '@material-ui/core' ; \r\n\r\nimport styles from './Departement.module.css' ; \r\n\r\n\r\nconst Departement  = ({ handleCountryChange , handleTypeChange}) =>   {\r\n    return(\r\n          <FormControl className={styles.FormControl}>\r\n              Country\r\n            <NativeSelect defaultValue=\"global\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"global\"> GlobalData </option>\r\n                <option value=\"Arabie Saoudite\"> Arabie Saoudite </option>\r\n                <option value=\"Allemagne\"> Allemagne </option>\r\n                <option value=\"Bulgarie\"> Bulgarie </option>\r\n                <option value=\"Albanie\"> Albanie </option>\r\n                <option value=\"Luxembourg\"> Luxembourg </option>\r\n                <option value=\"Bangladesh\"> Bangladesh </option>\r\n                <option value=\"Guinée-Bissau\"> Guinée-Bissau </option>\r\n                <option value=\"Grèce\"> Grèce </option>\r\n                <option value=\"Irlande\"> Irlande </option>\r\n                <option value=\"Maroc\"> Maroc </option>\r\n                <option value=\"AlleSierra Leoneagne\"> AlleSierra Leoneagne </option>\r\n                <option value=\"Afghanistan\"> Afghanistan </option>\r\n                <option value=\"Finlande\"> Finlande </option>\r\n                <option value=\"Belgique\"> Belgique </option>\r\n                <option value=\"Bahamas\"> Bahamas </option>\r\n                <option value=\"Pologne\"> Pologne </option>\r\n                <option value=\"Lettonie\"> Lettonie </option>\r\n                <option value=\"Brésil\"> Brésil </option>\r\n                <option value=\"Cameroun\"> Cameroun </option>\r\n                <option value=\"République Centrafricaine\"> République Centrafricaine </option>\r\n                <option value=\"Macédoine\"> Macédoine </option>\r\n                <option value=\"Oman\"> Oman </option>\r\n                <option value=\"Maurice\"> Maurice </option>\r\n                <option value=\"Cambodge\"> Cambodge </option>\r\n                <option value=\"Géorgie\"> Géorgie </option>\r\n                <option value=\"Malte\"> Malte </option>\r\n                <option value=\"Papouasie-Nouvelle-Guinée\"> Papouasie-Nouvelle-Guinée </option>\r\n                <option value=\"Côte d'Ivoire\"> Côte d'Ivoire </option>\r\n                <option value=\"Népal\"> Népal </option>\r\n                <option value=\"Barbade\"> Barbade </option>\r\n                <option value=\"Soudan du sud\"> Soudan du sud </option>\r\n                <option value=\"Norvège\"> Norvège </option>\r\n                <option value=\"Honduras\"> Honduras </option>\r\n                <option value=\"Suisse\"> Suisse </option>\r\n                <option value=\"Chine\"> Chine </option>\r\n                <option value=\"Suède\"> Suède </option>\r\n                <option value=\"Malawi\"> Malawi </option>\r\n                <option value=\"Qatar\"> Qatar </option>\r\n                <option value=\"Roumanie\"> Roumanie </option>\r\n                <option value=\"Japon\"> Japon </option>\r\n                <option value=\"Israël\"> Israël </option>\r\n                <option value=\"Guinée Équatoriale\"> Guinée Équatoriale </option>\r\n                <option value=\"Grenade\"> Grenade </option>\r\n                <option value=\"Belize\"> Belize </option>\r\n                <option value=\"Chypre\"> Chypre </option>\r\n                <option value=\"Colombie\"> Colombie </option>\r\n                <option value=\"Singapour\"> Singapour </option>\r\n                <option value=\"Botswana\"> Botswana </option>\r\n                <option value=\"Pays-Bas\"> Pays-Bas </option>\r\n                <option value=\"Bosnie-Herzégovine\"> Bosnie-Herzégovine </option>\r\n                <option value=\"Mauritanie\"> Mauritanie </option>\r\n                <option value=\"France\"> France </option>\r\n                <option value=\"Libye\"> Libye </option>\r\n                <option value=\"Australie\"> Australie </option>\r\n                <option value=\"Italie\"> Italie </option>\r\n                <option value=\"Pakistan\"> Pakistan </option>\r\n                <option value=\"Tunisie\"> Tunisie </option>\r\n                <option value=\"Brésil\"> Brésil </option>\r\n            </NativeSelect>\r\n            Display mode\r\n            <NativeSelect defaultValue=\"cumul\" onChange={(e) => handleTypeChange(e.target.value)}>\r\n                <option value=\"cumul\"> Représentation cumulée </option>\r\n                <option value=\"diff\"> Représentation differentielle </option>\r\n            </NativeSelect> \r\n        </FormControl>\r\n       \r\n    )\r\n}\r\n\r\nexport default Departement ;","import React from 'react' ; \r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core' ;\r\nimport styles from './Cards.module.css' ;\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames' ;\r\n\r\n\r\n\r\nconst Cards  = ( {data:{GlobalData , PaysData} , country} ) =>   {\r\n\r\n    var valueFound = false ;\r\n     \r\n    if (!GlobalData)\r\n        return 'Loading ...';\r\n        \r\n    console.log(country) ;\r\n\r\n    var infection  = GlobalData[0].Infection ; \r\n    var active  =   GlobalData[0].Infection * GlobalData[0].TauxInfection * 0.01  ;\r\n    var recovered  = GlobalData[0].Guerisons; \r\n    var deaths     = GlobalData[0].Deces; \r\n    var date       = new Date(GlobalData[0].Date).toDateString() ; \r\n\r\n    if (( country !== '')&&(country !== 'global')){\r\n        for (let i =0 ; !valueFound ; i++ ){\r\n            if (PaysData[i].Pays === country){\r\n                valueFound = true ;\r\n                infection  = PaysData[i].Infection ; \r\n                active  = PaysData[i].Infection * PaysData[i].TauxInfection * 0.01  ;\r\n                recovered  = PaysData[i].Guerisons; \r\n                deaths     = PaysData[i].Deces; \r\n                date       = new Date(PaysData[i].Date).toDateString() ; \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing = {3} justify=\"center\">\r\n                <Grid item component={Card}  xs = {12} md = {3} className={cx(styles.card , styles.infected)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n                        <Typography variant=\"h5\" > \r\n                            <CountUp   start = {0}  end  = {infection} duration = {2.5} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" > {date} </Typography>\r\n                        <Typography variant=\"body2\" > Total number of infected</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card}  xs = {12} md = {3} className={cx(styles.card , styles.active)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Active cases </Typography>\r\n                        <Typography variant=\"h5\" > \r\n                            <CountUp   start = {0}  end  = {active} duration = {2.5} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" > {date} </Typography>\r\n                        <Typography variant=\"body2\" > Number of active cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs = {12} md = {3} className = { cx(styles.card , styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\r\n                        <Typography variant=\"h5\" > \r\n                            <CountUp   start = {0}  end  = {recovered} duration = {2.5} separator = \",\" /> \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" > {date} </Typography>\r\n                        <Typography variant=\"body2\" > number of Recovered</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs = {12} md = {3} className = { cx(styles.card , styles.deaths)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\r\n                        <Typography variant=\"h5\" > \r\n                            <CountUp   start = {0}  end  = {deaths} duration = {2.5} separator = \",\" /> \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" > {date} </Typography>\r\n                        <Typography variant=\"body2\" > number of Deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards ;","import React from 'react' ; \r\nimport styles from './ModelInput.module.css' ; \r\nimport { FormControl, NativeSelect } from '@material-ui/core';\r\n\r\nconst ModelInput  = ({handleInputChange , N ,s0 ,e0, i0 , r0 , a ,b,c, f , conf , duree}) =>   {\r\n    var Population = N ; \r\n    var S0  = s0; \r\n    var I0  = i0 ; \r\n    var E0 = e0 ;\r\n    var R0  = r0; \r\n    var A   = a  ; \r\n    var B  = b ; \r\n    var C  = c ; \r\n    var F  = f ; \r\n    var Conf = conf ; \r\n    var Duree = duree ; \r\n    var Choice  ;\r\n    return(\r\n        <form onSubmit = {(e) => handleInputChange(e.target.value)} >\r\n            <div className = {styles.description}>\r\n                <p>\r\n                    Ci-dessous nous avons le modèle SIR, veuillez introduire les données initiales nécessaires conformément aux équations différentielles suivantes : <br></br>\r\n                 <br></br>\r\n                <br></br>\r\n                S0 : Le nombre initial des personnes susceptibles à avoir le virus.\r\n                <br></br>\r\n                E0 : Le nombre initial des personnes exposées au virus.\r\n                <br></br>\r\n                I0 : Le nombre initial des personnes infectées.\r\n                <br></br>\r\n                R10 : Le nombre initial des personnes présentées à l'hopital.\r\n                <br></br>\r\n                a  : Coefficient de transmission\r\n                <br></br>\r\n                b  : coefficient de guérison\r\n                <br></br>\r\n                c  : coefficient de guérison\r\n                <br></br>\r\n                f  : coefficient de guérison\r\n                <br></br>\r\n                <br></br>\r\n                dSdt = -a.S.I/N <br></br>  \r\n                dEdt = a.S.I/N -b.E<br></br>\r\n                dIdt = b.E - c.I<br></br>\r\n                dR1dt = f.c.I <br></br>\r\n                dR2dt = (1-f).c.I <br></br>\r\n                </p>\r\n            </div>\r\n\r\n            <div>           \r\n                <label> Population </label>\r\n                <input type=\"number\" placeholder=\"12 000 000\" onChange={(e) => { Population = e.target.value ;}}/>\r\n                <label> S0 </label>\r\n                <input type=\"number\" placeholder=\"12 000 000\" onChange={(e) => { S0 = e.target.value ;}} />\r\n                <label> E0 </label>\r\n                <input type=\"number\" placeholder=\"1\" onChange={(e) => { E0 = e.target.value ;}} />\r\n                <label> I0 </label>\r\n                <input type=\"number\" placeholder=\"1\" onChange={(e) => { I0 = e.target.value ;}} />\r\n                <label> R0 </label>\r\n                <input type=\"number\" placeholder=\"0\" onChange={(e) => { R0 = e.target.value ;}} />\r\n                <label> a </label>\r\n                <input type=\"number\" placeholder=\"0.3\" onChange={(e) => { A = e.target.value ;}} />\r\n                <label> b </label>\r\n                <input type=\"number\" placeholder=\"0.2\" onChange={(e) => { B = e.target.value ;}} />\r\n                <label> c </label>\r\n                <input type=\"number\" placeholder=\"0.1\" onChange={(e) => { C = e.target.value ;}} />\r\n                <label> f </label>\r\n                <input type=\"number\" placeholder=\"0.15\" onChange={(e) => { F = e.target.value ;}} />\r\n                <label> Date du confinement </label>\r\n                <input type=\"date\" placeholder=\"55\" onChange={(e) => { Conf = e.target.value - new Date('22/01/2020').getTime() ;}} />\r\n                <label> duree confinement </label>\r\n                <input type=\"number\" placeholder=\"55\" onChange={(e) => { Duree = e.target.value ;}} />\r\n                <button type=\"button\" onClick = {(e) => handleInputChange(Population, S0 ,E0, I0 , R0 , A,B,C, F, Choice,Conf,Duree)} > Show Results</button>\r\n                <FormControl>\r\n                    <NativeSelect defaultValue=\"def\" onChange={(e) => {Choice = e.target.value ;}}>\r\n                        <option value=\"def\"> default results </option>\r\n                        <option value=\"opt\"> optimal results </option>\r\n                    </NativeSelect>\r\n                </FormControl>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ModelInput ;","import React from 'react' ; \r\nimport { Line } from 'react-chartjs-2' ;\r\nimport styles from './ModelChart.module.css' ;\r\n\r\n//import * as zoom from 'chartjs-plugin-zoom' ; \r\n\r\n\r\n\r\n\r\n\r\nconst ModelChart  = ( { data:{GlobalData , PaysData} ,country, N,s0,e0,i0,r0,a,b,c,f,choice , conf , duree }) =>   {\r\n    var susceptibles = []; \r\n    var infected     = [];\r\n    var exposed      = [];  \r\n    var recovered    = []; \r\n    var dateData     = [];\r\n    var parameters   = []; \r\n    var Choice = choice ; \r\n    var text1 = \"\", text2 =\"\" , text3=\"\" , text4=\"\" ;\r\n\r\n    parameters[0] = parseFloat(a) ; \r\n    parameters[1] =parseFloat(b) ;\r\n    parameters[2] =parseFloat(c) ;\r\n    parameters[3] =parseFloat(f) ;\r\n    parameters[4] =parseFloat(conf);\r\n    parameters[5] =parseFloat(conf+ duree);\r\n\r\n    var realRecoveries = [] ; \r\n    if (!GlobalData)\r\n        return 'Loading ...';\r\n    //console.log(N)  ;\r\n    \r\n    //console.log(i0) ;\r\n    //console.log(s0) ;\r\n    //console.log(r0) ;\r\n    \r\n    susceptibles[0] = s0 ;     // fraction of the susceptible individuals\r\n    exposed[0] = e0 ; \r\n    infected[0] = i0   ;     // fraction of the infected population\r\n    recovered[0] = r0 ;      // fraction of the recovered population\r\n    var j =0  ; \r\n    if (country === \"global\"){\r\n        for ( let i = GlobalData.length-1 ; i > 0 ; i-- )\r\n        realRecoveries[GlobalData.length -1 - i] = GlobalData[i].Guerisons ; \r\n    }\r\n    else\r\n        for ( let i = PaysData.length-1 ; i > 0 ; i-- ){\r\n            if (PaysData[i].Pays === country){\r\n                realRecoveries[j] = PaysData[i].Guerisons ; \r\n                j = j+1 ; \r\n               // console.log(\"j\" + j ) ;\r\n                \r\n            }      \r\n        }\r\n\r\n    remplissage(GlobalData,susceptibles ,exposed, infected , recovered , parameters , N )  ;\r\n    //console.log(\"EQM\" + EQM(realRecoveries,recovered)) ; \r\n\r\n    for ( let i = GlobalData.length -1 ; i  > 0  ; i-- )\r\n        dateData[GlobalData.length-1 - i] = GlobalData[i].Date ; \r\n    \r\n    for ( let i =0 ; i < dateData.length ; i++ ){\r\n        const d = new Date(dateData[i]) ; \r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d)\r\n        const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(d)\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d)\r\n        dateData[i] = `${da}-${mo}-${ye}` ;\r\n    }\r\n    \r\n    console.log ( \"choice\" + choice) ; \r\n    console.log(\"conf \" + parameters[4] + \"deconf\"+ parameters[5]) ; \r\n    if (Choice === \"def\")\r\n        {\r\n            text1=\"\" ;\r\n            text2=\"\";\r\n            text3=\"\";\r\n            text4=\"\";\r\n        }\r\n    else {\r\n        solution(GlobalData,realRecoveries , susceptibles ,exposed, infected , recovered, parameters,N) ; \r\n        text1 =parameters[0] ; \r\n        text2 =parameters[1] ; \r\n        text3 =parameters[2] ;\r\n        text4 =parameters[3] ;\r\n    }\r\n     \r\n\r\n    //console.log(\"apres solution param \" + parameters)  ;\r\n    //console.log(\"apres solution dir\" + direction(GlobalData,realRecoveries , susceptibles ,exposed, infected , recovered, parameters,N,parameters[4], parameters[5]))  ;\r\n   // console.log(\"apres solution param \" + parameters)  ;\r\n    //console.log ( \"apres solution eqm\" +  EQM(realRecoveries, recovered)) ; \r\n    return( \r\n        <div className={styles.container}>\r\n            <Line\r\n                data={\r\n                    {\r\n                        labels : dateData,\r\n                        datasets : [{\r\n                            data : susceptibles,\r\n                            label : \"Susceptibles\",\r\n                            borderColor : 'gray',\r\n                            fill : 'true',\r\n                        },{\r\n                            data : exposed,\r\n                            label : \"exposed\",\r\n                            borderColor : 'orange ',\r\n                            fill : 'true',\r\n                        },{\r\n                            data : infected,\r\n                            label : \"active cases\",\r\n                            borderColor : 'blue ',\r\n                            fill : 'true',\r\n                        },{\r\n                            data : recovered,\r\n                            label : \"recovered\",\r\n                            borderColor : 'green',\r\n                            fill : 'true',\r\n                        }],\r\n                    }\r\n\r\n                }\r\n            />\r\n        <p> Solution Optimale : a= {text1}        ,    b= {text2}     ,     c= {text3}     ,     f= {text4} </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ModelChart ;\r\n\r\n\r\nconst remplissage = (GlobalData, susceptibles ,exposed, infected , recovered, parameters,N ) => {\r\n    for ( let i =0 ; i < GlobalData.length -1 ; i++  ){\r\n        susceptibles[i+1] = (1 - (parameters[0]/N) * infected[i] ) * susceptibles[i]  ; \r\n        exposed[i+1] = (parameters[0]/N) * infected[i]* susceptibles[i] + (1-parameters[1]) * exposed[i] ; \r\n        infected[i+1] = parameters[1] * exposed[i]  + (1-parameters[2]) * infected[i] ;  \r\n        recovered[i+1] = recovered[i] +parameters[3] *parameters[2]* infected[i] ; \r\n    }\r\n    if ( parameters[0] === NaN)\r\n        console.log(\"remplissage\");\r\n\r\n    \r\n}\r\n\r\nconst EQM = (array1 , array2, parameters ) =>{\r\n    var result = 0  ; \r\n    for ( let i =parameters[4] ; i < parameters[5] ; i ++ ){\r\n        result  = result + Math.pow((array1[i] - array2[i]), 2); \r\n    }\r\n    result = result / (parameters[5] - parameters[4] +1  )  ;  \r\n\r\n    return result\r\n}\r\n\r\n\r\nconst direction= (GlobalData,realRecoveries , susceptibles ,exposed, infected , recovered, parameters,N)=>{\r\n    var e1,e2,e3,e4,e5,e6,e7,e8  ; \r\n    let pas = 0.001 ; \r\n    //console.log(\"param \" + parameters[0])  ;\r\n    parameters[0]= parameters[0] + pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered,parameters,N);\r\n    e1 = EQM(realRecoveries, recovered,parameters) ;\r\n    //console.log(\"param \" + parameters[0])  ;\r\n    parameters[0]= parameters[0]-pas ; \r\n    parameters[1]= parameters[1]+pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered, parameters,N);\r\n    e2 = EQM(realRecoveries, recovered,parameters) ;\r\n    //console.log(\"param \" + EQM(realRecoveries, recovered))  ;\r\n    parameters[1]= parameters[1]-pas ; \r\n    parameters[2]= parameters[2]+pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered, parameters,N);\r\n    e3 = EQM(realRecoveries, recovered,parameters) ;\r\n    //console.log(\"param \" + parameters[0])  ;\r\n    parameters[2]= parameters[2]-pas ; \r\n    parameters[3]= parameters[3]+pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered, parameters,N);\r\n    e4 = EQM(realRecoveries, recovered,parameters) ;\r\n    //console.log(\"param \" + parameters[0])  ;\r\n    parameters[3]= parameters[3]-pas ; \r\n    parameters[0]= parameters[0]-pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered, parameters,N);\r\n    e5 = EQM(realRecoveries, recovered,parameters) ;\r\n    //console.log(\"param \" + parameters[0])  ;\r\n    parameters[0]= parameters[0]+pas ; \r\n    parameters[1]= parameters[1]-pas ;  \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered,parameters,N);\r\n    e6 = EQM(realRecoveries, recovered,parameters) ;\r\n    //console.log(\"param \" + parameters[0])  ;\r\n    parameters[1]= parameters[1]+pas ; \r\n    parameters[2]= parameters[2]-pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered, parameters,N);\r\n    e7 = EQM(realRecoveries, recovered,parameters) ; \r\n    parameters[2]= parameters[2]+pas ; \r\n    parameters[3]= parameters[3]-pas ; \r\n    remplissage(GlobalData, susceptibles ,exposed, infected , recovered, parameters,N);\r\n    e8 = EQM(realRecoveries, recovered,parameters) ;\r\n    parameters[3]= parameters[3]+pas ; \r\n    if ((e1 <e2 )&&(e1<e3)&&(e1<e4)&&(e1<e5)&&(e1<e6)&&(e1<e7)&&(e1<e8)){\r\n        parameters[0]=parameters[0] + pas ; \r\n        return e1  ; \r\n    } \r\n    else if ((e2 <e1 )&&(e2<e3)&&(e2<e4)&&(e2<e5)&&(e2<e6)&&(e2<e7)&&(e2<e8)){\r\n        parameters[1]=parameters[1] + pas ; \r\n        return e2  ; \r\n    } \r\n    else if ((e3 <e2 )&&(e3<e1)&&(e3<e4)&&(e3<e5)&&(e3<e6)&&(e3<e7)&&(e3<e8)){\r\n        parameters[2]=parameters[2] + pas ; \r\n        return e3 ; \r\n    } \r\n    else if ((e4 <e2 )&&(e4<e3)&&(e4<e1)&&(e4<e5)&&(e4<e6)&&(e4<e7)&&(e4<e8)){\r\n        parameters[3]=parameters[3] + pas ; \r\n        return e4  ; \r\n    } \r\n    else if ((e5 <e2 )&&(e5<e3)&&(e5<e1)&&(e5<e4)&&(e5<e6)&&(e5<e7)&&(e5<e8)){\r\n        parameters[0]=parameters[0] - pas ; \r\n        return e5  ; \r\n    } \r\n    else if ((e6 <e2 )&&(e6<e3)&&(e6<e1)&&(e6<e5)&&(e6<e4)&&(e6<e7)&&(e6<e8)){\r\n        parameters[1]=parameters[1] - pas ; \r\n        return e6  ; \r\n    } \r\n    else if ((e7 <e2 )&&(e7<e3)&&(e7<e1)&&(e7<e5)&&(e7<e6)&&(e7<e4)&&(e7<e8)){\r\n        parameters[2]=parameters[2] - pas ; \r\n        return e7  ; \r\n    } \r\n    else if ((e8 <e2 )&&(e8<e3)&&(e8<e1)&&(e8<e5)&&(e8<e6)&&(e8<e7)&&(e8<e4)){\r\n        parameters[3]=parameters[3] - pas ; \r\n        return e8  ; \r\n    } \r\n    if ( parameters[0] === NaN)\r\n        console.log(\"direction\");\r\n}\r\n\r\nconst solution = (GlobalData,realRecoveries , susceptibles ,exposed, infected , recovered, parameters,N) => {\r\n    var j = 1000; \r\n    var i = 0 ; \r\n    var minimum = EQM(realRecoveries , recovered ,parameters) ; \r\n    //console.log(\"realrec\" + realRecoveries) ; \r\n    console.log(\"min\" + minimum) ; \r\n    var aux = minimum ; \r\n    //console.log(\"minimum\" + minimum); \r\n    while ( i< j){\r\n        aux  = direction(GlobalData,realRecoveries , susceptibles ,exposed, infected , recovered, parameters,N) ; \r\n        i++ ; \r\n        if ( aux < minimum)\r\n            minimum = aux;\r\n        }\r\n\r\n} \r\n\r\n","import axios from 'axios' ; \r\n\r\nconst url  = 'https://yacdn.org/serve/https://www.data.gouv.fr/fr/datasets/r/a7596877-d7c3-4da6-99c1-2f52d418e881';\r\n\r\nexport const fetchData = async () => {\r\n    try{\r\n        const {data : {GlobalData, PaysData }} = await axios.get(url) ;\r\n\r\n        return {GlobalData, PaysData } ;\r\n\r\n    }catch (error){\r\n\r\n    }\r\n}","import React from 'react' ; \r\nimport { Cards , ModelInput , Chart , Departement , ModelChart } from './Composants' ; \r\nimport styles from './App.module.css' ;\r\nimport { fetchData } from './api' ;\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    state = {\r\n        data : {},\r\n        country :'global',\r\n        diff : 'cumul',\r\n        //Model SEIR Parameters\r\n        N  : 12000000, \r\n        s0 : 12000000,\r\n        e0 : 1 , \r\n        i0 : 1 ,\r\n        r0 : 0 ,  \r\n        a  : 0.3 , \r\n        b  : 0.2 ,\r\n        c  : 0.1 , \r\n        f  : 0.15 ,\r\n        conf : 55,\r\n        duree : 55,\r\n        choice : \"def\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(\"ComponentDidMount\") ;\r\n        const fetchedData = await fetchData() ;\r\n        console.log(fetchedData) ;\r\n        this.setState({data: fetchedData});\r\n        console.log(\"*****\") ;\r\n \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , country : country}) ;\r\n        console.log(\"handleCountryChange\") ;\r\n    }\r\n    handleTypeChange = async (diff) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , diff : diff})\r\n        console.log(\"handleTypeChange\") ;\r\n    }\r\n   \r\n/*    handlePopChange = async (N) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , N : N})\r\n    }\r\n    handleS0Change = async (s0) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , s0 : s0})\r\n    }\r\n    handleI0Change = async (i0) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , i0 : i0})\r\n    }\r\n    handleR0Change = async (r0) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , r0 : r0})\r\n    }*/\r\n\r\n    handleInputChange = async (N,s0,e0, i0,r0 , a,b,c ,f , choice,conf,duree) => {\r\n        const fetchedData = await fetchData() ;\r\n        this.setState({data: fetchedData , N : N , s0 : s0,e0 : e0 ,  i0 : i0 , r0:r0,  a:a ,  b:b , c:c ,f:f ,choice:choice,conf:conf,duree:duree })\r\n        console.log(\"handleInputChange\") ;\r\n    }\r\n    render() {\r\n        const {data , country , diff , N , s0 ,e0, i0 ,  r0, a , b ,c , f,choice,conf,duree} = this.state ;\r\n\r\n        return(\r\n            <div className = {styles.container}>\r\n                <Cards data ={data} country={country}  />\r\n                <Departement  handleCountryChange ={this.handleCountryChange} handleTypeChange= {this.handleTypeChange}/> \r\n                <Chart data ={data} country={country} diff={diff}   />\r\n                <ModelInput handleInputChange={this.handleInputChange}  N = {N} s0 = {s0} e0={e0} i0={i0} r0={r0} a={a} b={b} c={c} f={f} conf={conf} duree={duree} />  \r\n                <ModelChart  data ={data} country={country} N = {N} s0 = {s0}  e0={e0} i0={i0} r0={r0} a={a} b={b} c={c} f={f} choice={choice} conf={conf} duree={duree}  />        \r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default App ;","import React from 'react' ; \r\nimport ReactDOM from 'react-dom' ; \r\n\r\nimport App from './App' ; \r\n\r\nReactDOM.render(<App />, document.getElementById('root')) ; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__wpLJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Departement_FormControl__aUEn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ModelInput_container__2fpwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ModelChart_container__1OOvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__sFuqc\"};"],"sourceRoot":""}